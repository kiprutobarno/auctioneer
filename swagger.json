{
  "swagger": "2.0",
  "info": {
    "description": "An Auctioneering System API documetation by Kipruto Barno",
    "version": "1.0.0",
    "title": "Auctioneering System",
    "contact": {
      "email": "barxwells@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "e25af10e.ngrok.io",
  "basePath": "/api/v1",
  "schemes": ["https"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": ["Register"],
        "summary": "Create user",
        "description": "Creates the auctioneering system administrator",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "User already registered"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Login"],
        "summary": "User login",
        "description": "System administrator user login",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Missing email or password"
          }
        }
      }
    },
    "/owners": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": ["Get Owners"],
        "summary": "Get all owners",
        "description": "Retrieves all registered item owners",
        "operationId": "getOwners",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": ["Create Owner"],
        "summary": "Create owner",
        "description": "Creates the owner of the items to be auctioned",
        "operationId": "CreateOwner",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Owner"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Owner already registered"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "title": "User",
      "description": "A User who manages the Auctioneer System",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Must be a valid email address"
        },
        "password": {
          "type": "string",
          "description": "An alphanumeric string that can also contain special characters"
        }
      }
    },
    "Owner": {
      "title": "Owner",
      "description": "The owner who owns auction items",
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "User's first name"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name"
        },
        "email": {
          "type": "string",
          "description": "A valid email address"
        }
      }
    }
  }
}
